package project.warehouse.function;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.draw.LineSeparator;
import java.text.DateFormat;
import java.util.Date;
import java.util.Locale;

public class PdfHandler {    
    private static Font heading = new Font(FontFactory.getFont("../Fonts/segoeui.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED, 0.8f).getBaseFont(), 22);
    private static Font paragraph = new Font(FontFactory.getFont("../Fonts/segoeuil.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED, 0.8f).getBaseFont(), 14);
    
    //  เมธอดภายในสำหรับใส่ส่วนที่ว่างลงไป
    private static void addEmptyLine(Paragraph p, int line) {
        for (int i = 0; i < line; i++) {
            p.add(new Paragraph(" "));
        }
    }
    
    //  เมธอดสำหรับใส่ส่วน metadata ลงไป
    public static void addMetaData(Document doc) {
        doc.addAuthor(String.valueOf(User.getUsername()));
        doc.addCreator(String.valueOf(User.getUsername()));
        doc.addTitle("Stock");
    }

    //  เมธอดสำหรับใส่ส่วนหน้าปกลงไป
    public static void addCover(Document doc) throws DocumentException {
        Paragraph p = new Paragraph();
        p.add(new Paragraph("The Warehouse Checked Stocks Report", heading));
        addEmptyLine(p, 28);
        p.add(new Paragraph("This report was generated by: " + User.getUsername() + " (User ID: " + User.getUserId() + ")\n" +
            DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.FULL, Locale.UK).format(new Date()).replace("o'clock ", ""), paragraph));
        addEmptyLine(p, 5);
        doc.add(p);
        doc.add(new Chunk(new LineSeparator()));
        doc.newPage();
    }

    //  เมธอดสำหรับใส่ส่วนเนื้อหาลงไป
    public static void addContent(Document doc, Object[][] model) throws DocumentException {
        Paragraph p = new Paragraph();
        p.add(new Paragraph("Stocks Report", heading));
        addEmptyLine(p, 1);
        p.add(new Chunk(new LineSeparator()));
        addEmptyLine(p, 1);
        p.add(new Paragraph("                   This is current stocks in the warehouse.", paragraph));
        addEmptyLine(p, 2);
        createTable(p, model);
        doc.add(p);
    }

    //  เมธอดสำหรับใส่ส่วนตารางลงไป
    public static void createTable(Paragraph p, Object[][] model) throws BadElementException {
        PdfPTable table = new PdfPTable(5);
        
        //  สร้างส่วนหัวเรื่อง (Header) ของตาราง
        PdfPCell cell = new PdfPCell(new Phrase("No."));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        cell = new PdfPCell(new Phrase("Product ID"));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        cell = new PdfPCell(new Phrase("Name"));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        cell = new PdfPCell(new Phrase("Amount"));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(cell);
        cell = new PdfPCell(new Phrase("Last modified by User ID"));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        cell.setPaddingBottom(8);
        table.addCell(cell);
        table.setHeaderRows(1);
        
        for (int i = 1; i < model.length; i++) {
            for (Object[] value : model) {
            
                //  สร้างส่วนเนื้อหา (Content) ของตาราง
                cell = new PdfPCell(new Phrase(String.valueOf(i++)));
                cell.setPaddingBottom(6);
                table.addCell(cell);
                table.addCell(String.valueOf(value[0]));
                table.addCell(String.valueOf(value[1]));
                table.addCell(String.valueOf(value[2]));
                table.addCell(String.valueOf(value[3]));
                
            }
        }
        p.add(table);
    }
} 