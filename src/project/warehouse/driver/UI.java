package project.warehouse.driver;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Insets;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.border.Border;
import project.warehouse.database.ConnectionBuilder;
import project.warehouse.function.*;

//  @author jirawat, edited code by B
public class UI extends javax.swing.JFrame {
    
    UIMethods ctrl = new UIMethods();
    static boolean state = false;      //  ใช้กำหนดสถานะการเข้าสู่ระบบ
    static String temp = "", temp1 = "";   //  ใช้เก็บข้อความชั่วคราว
    static String[] strings = new String[4];    //  ใช้เก็บข้อความแนะนำการค้นหา
    
    //  Creates new form UI
    public UI() {
        initComponents();
    }
    
    //<editor-fold defaultstate="collapsed" desc="การตั้งตั้วแปรของ UI">
    /**
     * เปลี่ยนชื่อตัวแปรตามรูปแบบนี้
     * camelCase [JPanel] (รวมถึง functionใดๆ [JPanel])
     * รูปภาพ [JLabel]
     * ข้อความ_text [JLabel]
     * [JButton] [JPasswordField] [JTextField] ไม่มีการเปลี่ยนแปลงใดๆ
     * ข้อความที่เป็นแบบ default คือข้อความที่เห็นก่อนที่จะกดป้อนค่าข้อความใดๆลงไป (prompt text)
     */
    //</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc="Do NOT modify this code.">
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //</editor-fold>
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        profile = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        login = new javax.swing.JButton();
        register = new javax.swing.JButton();
        mainMenu = new javax.swing.JPanel();
        main_text = new javax.swing.JLabel();
        mainAddProduct = new javax.swing.JButton();
        mainSubProduct = new javax.swing.JButton();
        mainSearchProduct = new javax.swing.JButton();
        mainCheckStock = new javax.swing.JButton();
        addProduct = new javax.swing.JLabel();
        subProduct = new javax.swing.JLabel();
        searchProduct = new javax.swing.JLabel();
        checkStock = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        functionAddProduct = new javax.swing.JPanel();
        addProduct_text = new javax.swing.JLabel();
        prodId_text = new javax.swing.JLabel();
        prodName_text = new javax.swing.JLabel();
        prodAmount_text = new javax.swing.JLabel();
        prodId = new javax.swing.JTextField();
        prodName = new javax.swing.JTextField();
        prodAmount = new javax.swing.JTextField();
        clearAddProduct = new javax.swing.JButton();
        submitAddProduct = new javax.swing.JButton();
        backAddProduct = new javax.swing.JButton();
        functionSubProduct = new javax.swing.JPanel();
        subProduct_text = new javax.swing.JLabel();
        subProductById = new javax.swing.JRadioButton();
        subProductByName = new javax.swing.JRadioButton();
        prodIdSub = new javax.swing.JTextField();
        prodNameSub = new javax.swing.JTextField();
        prodAmountSub = new javax.swing.JTextField();
        prodAmountSub_text = new javax.swing.JLabel();
        clearSubProduct = new javax.swing.JButton();
        submitSubProduct = new javax.swing.JButton();
        backSubProduct = new javax.swing.JButton();
        functionSearchProduct = new javax.swing.JPanel();
        searchProduct_text = new javax.swing.JLabel();
        Border border = UIManager.getBorder("TextField.border");
        final BufferedImage image = ctrl.imgRead("../Warehouse/img/ic_search_black_24dp_1x.png");
        final int x = border.getBorderInsets(new javax.swing.JTextField()).left;
        search = new javax.swing.JTextField() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                int y = (getHeight() - image.getHeight())/2;
                g.drawImage(image, x, y, this);
            }
        };
        searchProductScrollPane = new javax.swing.JScrollPane();
        searchList = new javax.swing.JList<>();
        searchProductResultScrollPane = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        backSearchProduct = new javax.swing.JButton();
        functionCheckStock = new javax.swing.JPanel();
        checkStock_text = new javax.swing.JLabel();
        checkStockScrollPane = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        backCheckStock = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        welcome_text = new javax.swing.JLabel();
        time_text = new javax.swing.JLabel();
        clock = new javax.swing.JLabel();
        close = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Warehouse System");
        setResizable(false);

        leftPanel.setOpaque(false);
        leftPanel.setLayout(new java.awt.CardLayout());

        loginPanel.setBackground(new java.awt.Color(242, 242, 242));
        loginPanel.setPreferredSize(new java.awt.Dimension(400, 200));

        profile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profile.setIcon(new ImageIcon(".\\img\\ic_account_circle_black_48dp_2x.png"));
        profile.setToolTipText("");
        profile.setMaximumSize(new java.awt.Dimension(96, 96));
        profile.setMinimumSize(new java.awt.Dimension(96, 96));
        profile.setPreferredSize(new java.awt.Dimension(96, 96));

        username.setColumns(15);
        username.setDocument(new MaxInputLength(255));
        username.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        username.setForeground(new java.awt.Color(204, 204, 204));
        username.setText("Username");
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameKeyTyped(evt);
            }
        });

        password.setDocument(new MaxInputLength(255));
        password.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        password.setForeground(new java.awt.Color(204, 204, 204));
        password.setText("Password");
        password.setEchoChar('\u0000');
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordFocusLost(evt);
            }
        });
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordKeyTyped(evt);
            }
        });

        login.setBackground(new java.awt.Color(255, 255, 255));
        login.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        register.setBackground(new java.awt.Color(255, 255, 255));
        register.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        register.setText("Register");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(username)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(register, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(80, 80, 80))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(login)
                .addGap(18, 18, 18)
                .addComponent(register)
                .addGap(67, 67, 67))
        );

        leftPanel.add(loginPanel, "login");

        main_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        main_text.setText("Main menu");

        mainAddProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        mainAddProduct.setText("Add a product");
        mainAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainAddProductActionPerformed(evt);
            }
        });

        mainSubProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        mainSubProduct.setText("Remove a product");
        mainSubProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainSubProductActionPerformed(evt);
            }
        });

        mainSearchProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        mainSearchProduct.setText("Search a product");
        mainSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainSearchProductActionPerformed(evt);
            }
        });

        mainCheckStock.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        mainCheckStock.setText("Check stocks");
        mainCheckStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainCheckStockActionPerformed(evt);
            }
        });

        addProduct.setIcon(ctrl.addIcon);

        subProduct.setIcon(ctrl.subIcon);

        searchProduct.setIcon(ctrl.srchIcon);

        checkStock.setIcon(ctrl.strIcon);

        logout.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainMenuLayout = new javax.swing.GroupLayout(mainMenu);
        mainMenu.setLayout(mainMenuLayout);
        mainMenuLayout.setHorizontalGroup(
            mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainMenuLayout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addComponent(addProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mainAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addComponent(subProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mainSubProduct))
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkStock, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainCheckStock, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(72, 72, 72))
            .addGroup(mainMenuLayout.createSequentialGroup()
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(main_text))
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(logout)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainMenuLayout.setVerticalGroup(
            mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(main_text)
                .addGap(60, 60, 60)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainSubProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addComponent(mainSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mainCheckStock, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainMenuLayout.createSequentialGroup()
                        .addComponent(searchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkStock, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(logout)
                .addGap(20, 20, 20))
        );

        leftPanel.add(mainMenu, "mainMenu");

        addProduct_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        addProduct_text.setText("Add a product");

        prodId_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        prodId_text.setText("Product ID");

        prodName_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        prodName_text.setText("Product name");

        prodAmount_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        prodAmount_text.setText("Product amount");

        prodId.setDocument(new MaxInputLength(20));
        prodId.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        prodId.setForeground(new java.awt.Color(204, 204, 204));
        prodId.setText("Type only number!");
        prodId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                prodIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                prodIdFocusLost(evt);
            }
        });
        prodId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prodIdMouseEntered(evt);
            }
        });
        prodId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodIdActionPerformed(evt);
            }
        });

        prodName.setDocument(new MaxInputLength(27));
        prodName.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        prodName.setForeground(new java.awt.Color(204, 204, 204));
        prodName.setText("Enter a product name.");
        prodName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                prodNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                prodNameFocusLost(evt);
            }
        });
        prodName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodNameActionPerformed(evt);
            }
        });

        prodAmount.setDocument(new MaxInputLength(17));
        prodAmount.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        prodAmount.setForeground(new java.awt.Color(204, 204, 204));
        prodAmount.setText("Type only number!");
        prodAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                prodAmountFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                prodAmountFocusLost(evt);
            }
        });
        prodAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prodAmountMouseEntered(evt);
            }
        });
        prodAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitAddProductActionPerformed(evt);
            }
        });

        clearAddProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        clearAddProduct.setText("Clear");
        clearAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAddProductActionPerformed(evt);
            }
        });

        submitAddProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        submitAddProduct.setText("Submit");
        submitAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitAddProductActionPerformed(evt);
            }
        });

        backAddProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        backAddProduct.setText("Back");
        backAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backAddProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout functionAddProductLayout = new javax.swing.GroupLayout(functionAddProduct);
        functionAddProduct.setLayout(functionAddProductLayout);
        functionAddProductLayout.setHorizontalGroup(
            functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionAddProductLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(functionAddProductLayout.createSequentialGroup()
                        .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(functionAddProductLayout.createSequentialGroup()
                                .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(prodId_text)
                                    .addComponent(prodName_text))
                                .addGap(41, 41, 41))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionAddProductLayout.createSequentialGroup()
                                .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(prodAmount_text)
                                    .addComponent(clearAddProduct))
                                .addGap(18, 18, 18)))
                        .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(prodName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(prodId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(prodAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(submitAddProduct)))
                    .addComponent(backAddProduct))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionAddProductLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addProduct_text)
                .addGap(129, 129, 129))
        );
        functionAddProductLayout.setVerticalGroup(
            functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionAddProductLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(addProduct_text)
                .addGap(60, 60, 60)
                .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prodId_text, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prodName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodName_text, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prodAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodAmount_text))
                .addGap(23, 23, 23)
                .addGroup(functionAddProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitAddProduct)
                    .addComponent(clearAddProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(backAddProduct)
                .addGap(20, 20, 20))
        );

        leftPanel.add(functionAddProduct, "card4");

        subProduct_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        subProduct_text.setText("Remove a product");

        subProductById.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        subProductById.setText("By Product ID");
        subProductById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subProductByIdActionPerformed(evt);
            }
        });

        subProductByName.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        subProductByName.setText("By Product name");
        subProductByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subProductByNameActionPerformed(evt);
            }
        });

        prodIdSub.setColumns(17);
        prodIdSub.setDocument(new MaxInputLength(20));
        prodIdSub.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        prodIdSub.setForeground(new java.awt.Color(204, 204, 204));
        prodIdSub.setText("Type only number!");
        prodIdSub.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                prodIdSubFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                prodIdSubFocusLost(evt);
            }
        });
        prodIdSub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prodIdSubMouseEntered(evt);
            }
        });
        prodIdSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodIdSubActionPerformed(evt);
            }
        });

        prodNameSub.setDocument(new MaxInputLength(255));
        prodNameSub.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        prodNameSub.setForeground(new java.awt.Color(204, 204, 204));
        prodNameSub.setText("Enter a product name.");
        prodNameSub.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                prodNameSubFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                prodNameSubFocusLost(evt);
            }
        });
        prodNameSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodNameSubActionPerformed(evt);
            }
        });

        prodAmountSub.setDocument(new MaxInputLength(13));
        prodAmountSub.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        prodAmountSub.setForeground(new java.awt.Color(204, 204, 204));
        prodAmountSub.setText("Number only!");
        prodAmountSub.setToolTipText("");
        prodAmountSub.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                prodAmountSubFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                prodAmountSubFocusLost(evt);
            }
        });
        prodAmountSub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prodAmountSubMouseEntered(evt);
            }
        });
        prodAmountSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitSubProductActionPerformed(evt);
            }
        });

        prodAmountSub_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        prodAmountSub_text.setText("Product amount");

        clearSubProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        clearSubProduct.setText("Clear");
        clearSubProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSubProductActionPerformed(evt);
            }
        });

        submitSubProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        submitSubProduct.setText("Submit");
        submitSubProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitSubProductActionPerformed(evt);
            }
        });

        backSubProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        backSubProduct.setText("Back");
        backSubProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backSubProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout functionSubProductLayout = new javax.swing.GroupLayout(functionSubProduct);
        functionSubProduct.setLayout(functionSubProductLayout);
        functionSubProductLayout.setHorizontalGroup(
            functionSubProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionSubProductLayout.createSequentialGroup()
                .addGroup(functionSubProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(functionSubProductLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(functionSubProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subProductById)
                            .addComponent(backSubProduct)
                            .addComponent(subProductByName)))
                    .addGroup(functionSubProductLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(subProduct_text))
                    .addGroup(functionSubProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, functionSubProductLayout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addComponent(prodAmountSub_text)
                            .addGap(18, 18, 18)
                            .addComponent(prodAmountSub, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, functionSubProductLayout.createSequentialGroup()
                            .addGap(57, 57, 57)
                            .addGroup(functionSubProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(prodIdSub)
                                .addComponent(prodNameSub, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))))
                .addGap(0, 53, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionSubProductLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearSubProduct)
                .addGap(18, 18, 18)
                .addComponent(submitSubProduct)
                .addGap(116, 116, 116))
        );
        functionSubProductLayout.setVerticalGroup(
            functionSubProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionSubProductLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(subProduct_text)
                .addGap(60, 60, 60)
                .addComponent(subProductById)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prodIdSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subProductByName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prodNameSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(functionSubProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prodAmountSub_text)
                    .addComponent(prodAmountSub, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(functionSubProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitSubProduct)
                    .addComponent(clearSubProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(backSubProduct)
                .addGap(20, 20, 20))
        );

        leftPanel.add(functionSubProduct, "card5");

        searchProduct_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        searchProduct_text.setText("Search a product");

        search.setDocument(new MaxInputLength(18));
        search.setFont(new java.awt.Font("Segoe UI Semilight", 2, 18)); // NOI18N
        search.setForeground(new java.awt.Color(204, 204, 204));
        search.setText("Search...");
        search.setMargin(new Insets(0, x + image.getWidth(), 0, 0));
        search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchCaretUpdate(evt);
            }
        });
        search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFocusLost(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        searchProductScrollPane.setVisible(false);
        searchProductScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        searchProductScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        searchProductScrollPane.setPreferredSize(new java.awt.Dimension(70, 110));

        searchList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        UIManager.put("List.focusCellHighlightBorder", BorderFactory.createEmptyBorder(0, 1, 0, 0));
        searchList.setModel(new javax.swing.AbstractListModel<String>() {
            //String[] strings = SearchProduct.searchListInsert(temp);
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        searchList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        searchList.setPreferredSize(new java.awt.Dimension(70, 108));
        searchList.setSelectionBackground(new java.awt.Color(240, 240, 240));
        searchList.setSelectionForeground(new java.awt.Color(0, 0, 0));
        searchList.setVisibleRowCount(4);
        searchList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchListKeyPressed(evt);
            }
        });
        searchProductScrollPane.setViewportView(searchList);

        searchProductResultScrollPane.setVisible(false);
        //searchStockScrollPane.setColumnHeader(new JViewport() {
            //    @Override
            //    public Dimension getPreferredSize() {
                //        Dimension d = super.getPreferredSize();
                //        d.height = 44;
                //        return d;
                //    }
            //});

    searchTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
    searchTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    searchTable.getTableHeader().setFont(new Font("Segoe UI Semilight", Font.PLAIN, 24));
    searchTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Product ID", "Name", "Amount", "Last modified by User ID"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    searchTable.setRowHeight(32);
    searchTable.getTableHeader().setReorderingAllowed(false);
    searchProductResultScrollPane.setViewportView(searchTable);
    if (searchTable.getColumnModel().getColumnCount() > 0) {
        searchTable.getColumnModel().getColumn(0).setResizable(false);
        searchTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        searchTable.getColumnModel().getColumn(1).setResizable(false);
        searchTable.getColumnModel().getColumn(1).setPreferredWidth(250);
        searchTable.getColumnModel().getColumn(2).setResizable(false);
        searchTable.getColumnModel().getColumn(2).setPreferredWidth(110);
        searchTable.getColumnModel().getColumn(3).setResizable(false);
        searchTable.getColumnModel().getColumn(3).setPreferredWidth(300);
    }

    backSearchProduct.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
    backSearchProduct.setText("Back");
    backSearchProduct.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            backSearchProductActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout functionSearchProductLayout = new javax.swing.GroupLayout(functionSearchProduct);
    functionSearchProduct.setLayout(functionSearchProductLayout);
    functionSearchProductLayout.setHorizontalGroup(
        functionSearchProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(functionSearchProductLayout.createSequentialGroup()
            .addGroup(functionSearchProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionSearchProductLayout.createSequentialGroup()
                    .addGap(114, 114, 114)
                    .addComponent(searchProduct_text))
                .addGroup(functionSearchProductLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(functionSearchProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(searchProductResultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(functionSearchProductLayout.createSequentialGroup()
                            .addGroup(functionSearchProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(backSearchProduct))
                            .addGap(0, 0, Short.MAX_VALUE)))))
            .addContainerGap(23, Short.MAX_VALUE))
        .addGroup(functionSearchProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionSearchProductLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(searchProductScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE)))
    );
    functionSearchProductLayout.setVerticalGroup(
        functionSearchProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionSearchProductLayout.createSequentialGroup()
            .addGap(39, 39, 39)
            .addComponent(searchProduct_text)
            .addGap(60, 60, 60)
            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(searchProductResultScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, Short.MAX_VALUE)
            .addComponent(backSearchProduct)
            .addGap(20, 20, 20))
        .addGroup(functionSearchProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionSearchProductLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(searchProductScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(230, Short.MAX_VALUE)))
    );

    leftPanel.add(functionSearchProduct, "card6");

    checkStock_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
    checkStock_text.setText("Check stocks");

    //checkStockScrollPane.setColumnHeader(new JViewport() {
        //    @Override
        //    public Dimension getPreferredSize() {
            //        Dimension d = super.getPreferredSize();
            //        d.height = 44;
            //        return d;
            //    }
        //});

stockTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
stockTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
stockTable.getTableHeader().setFont(new Font("Segoe UI Semilight", Font.PLAIN, 24));
stockTable.setModel(new javax.swing.table.DefaultTableModel(
    new Object [][] {

    },
    new String [] {
        "Product ID", "Name", "Amount", "Last modified by User ID"
    }
    ) {
        boolean[] canEdit = new boolean [] {
            false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    stockTable.setRowHeight(32);
    stockTable.getTableHeader().setReorderingAllowed(false);
    checkStockScrollPane.setViewportView(stockTable);
    if (stockTable.getColumnModel().getColumnCount() > 0) {
        stockTable.getColumnModel().getColumn(0).setResizable(false);
        stockTable.getColumnModel().getColumn(0).setPreferredWidth(200);
        stockTable.getColumnModel().getColumn(1).setResizable(false);
        stockTable.getColumnModel().getColumn(1).setPreferredWidth(250);
        stockTable.getColumnModel().getColumn(2).setResizable(false);
        stockTable.getColumnModel().getColumn(2).setPreferredWidth(110);
        stockTable.getColumnModel().getColumn(3).setResizable(false);
        stockTable.getColumnModel().getColumn(3).setPreferredWidth(300);
    }

    backCheckStock.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
    backCheckStock.setText("Back");
    backCheckStock.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            backCheckStockActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout functionCheckStockLayout = new javax.swing.GroupLayout(functionCheckStock);
    functionCheckStock.setLayout(functionCheckStockLayout);
    functionCheckStockLayout.setHorizontalGroup(
        functionCheckStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(functionCheckStockLayout.createSequentialGroup()
            .addGroup(functionCheckStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionCheckStockLayout.createSequentialGroup()
                    .addGap(134, 134, 134)
                    .addComponent(checkStock_text))
                .addGroup(functionCheckStockLayout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(functionCheckStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(checkStockScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                        .addComponent(backCheckStock))))
            .addGap(23, 23, 23))
    );
    functionCheckStockLayout.setVerticalGroup(
        functionCheckStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, functionCheckStockLayout.createSequentialGroup()
            .addGap(39, 39, 39)
            .addComponent(checkStock_text)
            .addGap(60, 60, 60)
            .addComponent(checkStockScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
            .addGap(18, 18, 18)
            .addComponent(backCheckStock)
            .addGap(20, 20, 20))
    );

    leftPanel.add(functionCheckStock, "card7");

    rightPanel.setBackground(new java.awt.Color(242, 242, 242));
    rightPanel.setOpaque(false);
    rightPanel.setPreferredSize(new java.awt.Dimension(400, 200));

    welcome_text.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
    welcome_text.setText("Welcome to Warehouse System");

    time_text.setFont(new java.awt.Font("Browallia New", 0, 32)); // NOI18N
    time_text.setText(ctrl.clock(time_text)
    );

    clock.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    clock.setIcon(new ImageIcon(".\\img\\ic_access_time_black_24dp_1x.png"));
    clock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    close.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    close.setIcon(new ImageIcon(".\\img\\ic_power_settings_new_black_24dp_1x.png"));
    close.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    close.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            closeMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            closeMouseEntered(evt);
        }
    });

    javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
    rightPanel.setLayout(rightPanelLayout);
    rightPanelLayout.setHorizontalGroup(
        rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(rightPanelLayout.createSequentialGroup()
            .addContainerGap(62, Short.MAX_VALUE)
            .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(welcome_text)
                .addGroup(rightPanelLayout.createSequentialGroup()
                    .addComponent(time_text)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    rightPanelLayout.setVerticalGroup(
        rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(rightPanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(welcome_text)
            .addGap(18, 18, 18)
            .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(time_text)
                .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(290, 290, 290))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(3, 3, 3))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //  ใช้ออกจากโปรแกรมเมื่อกดไปที่รูปภาพไอคอน โดยใช้ close(boolean bl) ใน project.warehouse.driver.UIMethods
    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        ctrl.close(state);
        // TODO add your handling code here:
    }//GEN-LAST:event_closeMouseClicked

    //  ใช้แสดงข้อความช่วยเหลือ (Tooltip) เมื่อมีการเอา Cursor เข้ามายัง close [JLabel]
    private void closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseEntered
        close.setToolTipText("Click here to exit.");
        // TODO add your handling code here:
    }//GEN-LAST:event_closeMouseEntered

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        ctrl.checkActionPerformed(username, "Username", 0, password);
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void usernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusGained
        if (!ctrl.checkCorrect(username, "Username", 0)) {
            username.setCaretPosition(0);
        } else {
            username.setCaretPosition(username.getText().length());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFocusGained

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusGained
        if (!ctrl.checkCorrect(password, "Password", 0)) {
            password.setCaretPosition(0);
        } else {
            password.setCaretPosition(password.getText().length());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFocusGained

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusLost
        if (username.getText().isEmpty()) {
            ctrl.defaultText(username, "Username");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFocusLost

    private void passwordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusLost
        if (password.getText().isEmpty()) {
            ctrl.defaultText(password, "Password");
            password.setEchoChar((char) 0);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFocusLost

    private void usernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyTyped
        ctrl.setText(username, "Username");
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameKeyTyped

    private void passwordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyTyped
        ctrl.setText(password, "Password");
        password.setEchoChar('\u25cf');
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordKeyTyped

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        try {
            //  เช็คค่าที่ได้รับมาโดยใช้ checkCorrect(JTextField field, String message, boolean bl) ใน project.warehouse.driver.UIMethods
            if (ctrl.checkCorrect(username, "Username", 0) && ctrl.checkCorrect(password, "Password", 0)) {
                User.register(username.getText(), String.valueOf(password.getPassword()));
                JOptionPane.showMessageDialog(null, "Your new account has been successfully created.", " Success", JOptionPane.INFORMATION_MESSAGE, ctrl.infoIcon);
            } else {
                JOptionPane.showMessageDialog(null, "Oops! Any blank data fields are not allowed.", " Warning !", JOptionPane.WARNING_MESSAGE, ctrl.warnIcon);
            }
        } catch (AlreadyUsedUsername ex) {
            JOptionPane.showMessageDialog(null, "Sorry, this account has already been used.", " Error !!!", JOptionPane.ERROR_MESSAGE, ctrl.errIcon);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Sorry, we're unable to create your account.", " Error !!!", JOptionPane.ERROR_MESSAGE, ctrl.errIcon);
            System.err.println("Oops!, There's an internal error.");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_registerActionPerformed

    //  ใช้ร่วมกันกับทั้ง password [JPasswordField] (ทำให้สามารถกด Enter เพื่อเข้าสู่ระบบได้) และ login [JButton]
    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        String usernameString = username.getText();
        String passwordString = String.valueOf(password.getPassword());

        try {
            if (User.verifyLogin(usernameString, passwordString)) {
                Connection conn = ConnectionBuilder.getConnection();
                PreparedStatement ps = conn.prepareStatement("SELECT USER_ID FROM ROOT.USERSYS WHERE USER_NAME=?");
                ps.setString(1, usernameString);
                ResultSet rs = ps.executeQuery();
                rs.next();
                User.setUserId(rs.getInt("USER_ID"));
                
                JOptionPane.showMessageDialog(null, "Your account has been successfully logged in.", " Success", JOptionPane.INFORMATION_MESSAGE, ctrl.vusrIcon);
                state = true;
                ctrl.clickMainBack(leftPanel, mainMenu);
            } else {
                JOptionPane.showMessageDialog(null, "Oops! Incorrect username or password.", " Warning !", JOptionPane.WARNING_MESSAGE, ctrl.warnIcon);
                username.requestFocus();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Sorry, an error was detected. Please try again later.", " Error !!!", JOptionPane.ERROR_MESSAGE, ctrl.errIcon);
            System.err.println("Oops!, There's an internal error.");
            ex.printStackTrace();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_loginActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        if (ctrl.logout()) {
            state = false;
            ctrl.clickMainBack(leftPanel, loginPanel);
            ctrl.defaultText(prodId, "Type only number!");
            ctrl.defaultText(prodName, "Enter a product name.");
            ctrl.defaultText(prodAmount, "Type only number!");
            ctrl.defaultText(prodIdSub, "Type only number!");
            ctrl.defaultText(prodNameSub, "Enter a product name.");
            ctrl.defaultText(prodAmountSub, "Number only!");
            ctrl.defaultText(search, "Search...");
            searchProductScrollPane.setVisible(false);
            searchList.clearSelection();
            searchProductResultScrollPane.setVisible(false);
            SearchProduct.searchTableRowClear(searchTable);
            ctrl.defaultText(username, "Username");
            ctrl.defaultText(password, "Password");
            password.setEchoChar((char) 0);
            username.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutActionPerformed

    private void mainAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainAddProductActionPerformed
        ctrl.clickMainBack(leftPanel, functionAddProduct);
        // TODO add your handling code here:
    }//GEN-LAST:event_mainAddProductActionPerformed

    private void backAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backAddProductActionPerformed
        ctrl.clickMainBack(leftPanel, mainMenu);
        // TODO add your handling code here:
    }//GEN-LAST:event_backAddProductActionPerformed

    private void mainSubProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSubProductActionPerformed
        ctrl.clickMainBack(leftPanel, functionSubProduct);
        if (!subProductByName.isSelected()) {
            ctrl.clickSelect(subProductById, prodIdSub, prodNameSub, "Enter a product name.");
        } else {
            ctrl.clickSelect(subProductByName, prodNameSub, prodIdSub, "Type only number!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_mainSubProductActionPerformed

    private void backSubProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backSubProductActionPerformed
        ctrl.clickMainBack(leftPanel, mainMenu);
        // TODO add your handling code here:
    }//GEN-LAST:event_backSubProductActionPerformed

    private void mainSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSearchProductActionPerformed
        ctrl.clickMainBack(leftPanel, functionSearchProduct);
        search.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_mainSearchProductActionPerformed

    private void backSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backSearchProductActionPerformed
        ctrl.clickMainBack(leftPanel, mainMenu);
        // TODO add your handling code here:
    }//GEN-LAST:event_backSearchProductActionPerformed

    private void mainCheckStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainCheckStockActionPerformed
        ctrl.clickMainBack(leftPanel, functionCheckStock);
        CheckStock.stockTableRowInsert(stockTable);
        // TODO add your handling code here:
    }//GEN-LAST:event_mainCheckStockActionPerformed

    private void backCheckStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backCheckStockActionPerformed
        ctrl.clickMainBack(leftPanel, mainMenu);
        // TODO add your handling code here:
    }//GEN-LAST:event_backCheckStockActionPerformed

    //  ใช้แสดงข้อความช่วยเหลือ (Tooltip) เมื่อมีการเอา Cursor เข้ามายัง prodId.../prodAmount... [JTextField]
    private void prodIdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodIdMouseEntered
        prodId.setToolTipText(ctrl.toolTip);
        // TODO add your handling code here:
    }//GEN-LAST:event_prodIdMouseEntered

    private void prodAmountMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodAmountMouseEntered
        prodAmount.setToolTipText(ctrl.toolTip);
        // TODO add your handling code here:
    }//GEN-LAST:event_prodAmountMouseEntered

    private void prodIdSubMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodIdSubMouseEntered
        prodIdSub.setToolTipText(ctrl.toolTip);
        // TODO add your handling code here:
    }//GEN-LAST:event_prodIdSubMouseEntered

    private void prodAmountSubMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodAmountSubMouseEntered
        prodAmountSub.setToolTipText(ctrl.toolTip);
        // TODO add your handling code here:
    }//GEN-LAST:event_prodAmountSubMouseEntered

    // <editor-fold defaultstate="collapsed" desc="รูปแบบ events ของ prodId../prodName../prodAmount.. [JTextField]">
    /**
     * ทั้ง prodId, prodName, prodAmount, prodIdSub, prodNameSub และ prodAmountSub [JTextField] 
     * มี events(java.awt.event) ที่เหมือนกันคือ FocusGained และ FocusLost
     * 
     * ...FocusGained(FocusEvent evt)
     * ใช้ setText(JTextField field, String message)
     * ใน project.warehouse.driver.UIMethods
     * 
     * ...FocusLost(FocusEvent evt)
     * เช็คว่าเมื่อกดไปยังที่ตำแหน่งอื่นๆแล้วยังมีข้อความอยู่ในนั้นหรือไม่
     * ถ้าไม่มีก็ใช้ defaultText(JTextField field, String message)
     * ใน project.warehouse.driver.UIMethods
     * - เพิ่มเติมสำหรับ prodId.../prodAmount... ในส่วน else ใช้ checkLong(JTextField field) สำหรับ prodId... 
     *   หรือ checkInt(JTextField field) สำหรับ prodAmount... กับ checkFocusLost(JTextField field, String message)
     *   ใน project.warehouse.driver.UIMethods
     * - เพิ่มเติมสำหรับ prodIdSub และ prodNameSub ที่จะเช็คค่าเพิ่มเติมว่า [JRadioButton] ถูกเลือกแล้วหรือไม่
     * 
     * (อาจยังมี bugs หลงเหลืออยู่บ้างเล็กน้อย แต่ไม่ถึงกับต้องวิตกกังวลมากนัก)
     */
    //</editor-fold>
    
    private void prodIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodIdActionPerformed
        ctrl.checkActionPerformed(prodId, "Username", 2, prodName);
        ctrl.checkLong(prodId, prodName);
        // TODO add your handling code here:
    }//GEN-LAST:event_prodIdActionPerformed

    private void prodNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodNameActionPerformed
        ctrl.checkActionPerformed(prodName, "Enter a product name.", 0, prodAmount);
        // TODO add your handling code here:
    }//GEN-LAST:event_prodNameActionPerformed

    private void prodIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodIdFocusGained
        ctrl.setText(prodId, "Type only number!");
        // TODO add your handling code here:
    }//GEN-LAST:event_prodIdFocusGained

    private void prodNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodNameFocusGained
        ctrl.setText(prodName, "Enter a product name.");
        // TODO add your handling code here:
    }//GEN-LAST:event_prodNameFocusGained

    private void prodAmountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodAmountFocusGained
        ctrl.setText(prodAmount, "Type only number!");
        // TODO add your handling code here:
    }//GEN-LAST:event_prodAmountFocusGained

    private void prodIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodIdFocusLost
        if (prodId.getText().isEmpty()) {
            ctrl.defaultText(prodId, "Type only number!");
        } else {
            ctrl.checkLong(prodId);
            ctrl.checkFocusLost(prodId, "Type only number!");
            ctrl.checkInsert(prodId, prodName, prodAmount);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_prodIdFocusLost

    private void prodNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodNameFocusLost
        if (prodName.getText().isEmpty()) {
            ctrl.defaultText(prodName, "Enter a product name.");
        } else {
            ctrl.checkInsert(prodId, prodName, prodAmount);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_prodNameFocusLost

    private void prodAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodAmountFocusLost
        if (prodAmount.getText().isEmpty()) {
            ctrl.defaultText(prodAmount, "Type only number!");
        } else {
            ctrl.checkInt(prodAmount);
            ctrl.checkFocusLost(prodAmount, "Type only number!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_prodAmountFocusLost

    /**
     * ตั้งค่าข้อความของ prodId, prodName และ prodAmount [JTextField] ให้เป็นแบบ default
     * โดยใช้ defaultText(JTextField field, String message)
     * ใน project.warehouse.driver.UIMethods
     */
    private void clearAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAddProductActionPerformed
        ctrl.defaultText(prodId, "Type only number!");
        ctrl.defaultText(prodName, "Enter a product name.");
        ctrl.defaultText(prodAmount, "Type only number!");
        // TODO add your handling code here:
    }//GEN-LAST:event_clearAddProductActionPerformed

    //  ใช้ร่วมกันกับทั้ง prodAmount [JTextField] (ทำให้สามารถกด Enter เพื่อป้อนรายการเข้าสู่ระบบได้) และ submitAddProduct [JButton]
    private void submitAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitAddProductActionPerformed
        if (!ctrl.checkCorrect(prodId, "Type only number!", 2)) {
            if (ctrl.checkCorrect(prodAmount, "Type only number!", 2)) {
                ctrl.reenterText(prodAmount, "Oops! Incorrect data.");
            } else if (ctrl.checkSubmit(prodId, prodName, prodAmount, "Type only number!", "Enter a product name.", null, 0)) {
                if (ctrl.checkSubmit(prodId, prodName, prodAmount, "Type only number!", "Enter a product name.", null, 3)) {
                    ctrl.reenterText(prodAmount, "Oops! Blank data.");
                } else {
                    if (ctrl.checkSubmit(prodId, prodName, prodAmount, "Type only number!", "Enter a product name.", null, 1)) {
                        prodId.requestFocus();
                    } else if (ctrl.checkSubmit(prodId, prodName, prodAmount, "Type only number!", "Enter a product name.", null, 2)) {
                        prodName.requestFocus();
                    }
                    JOptionPane.showMessageDialog(null, "Oops! Any blank data fields are not allowed.", " Warning !", JOptionPane.WARNING_MESSAGE, ctrl.warnIcon);
                }
            } else if (ctrl.checkInt(prodAmount) && ctrl.checkProduct(prodId, prodName)) {
                try {
                    if (ctrl.checkSubmit(prodId, prodName, prodAmount, "Type only number!", "Enter a product name.", null, 4)) {
                        String id = prodId.getText();
                        String name = prodName.getText();
                        String count = prodAmount.getText();
                        String msg = "Please check the correction of these informations before we proceed.\n\n" +
                                     "<html><b>Product ID</b><html> :" + "\n      " + id + "\n" +
                                     "<html><b>Product name</b><html> :" + "\n      " + name + "\n" +
                                     "<html><b>Product amount</b><html> :" + "\n      " + count + "\n\n" +
                                     "Do you want to continue?\n";
        
                        //  ขึ้นหน้าต่างยืนยันการทำงาน โดยให้ตรวจสอบว่าข้อมูลที่ใส่เข้าไปนั้นถูกต้องหรือไม่
                        int response = JOptionPane.showConfirmDialog(null, msg, " Confirm ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, ctrl.markIcon);
                        if (response == JOptionPane.YES_OPTION) {
                            Product.addProduct(id, name, Integer.parseInt(count));
                            JOptionPane.showMessageDialog(null, "Your new product has been successfully added to the database.", " Success", JOptionPane.INFORMATION_MESSAGE, ctrl.cptIcon);
                            prodId.requestFocus();
                        }
                    }
                } catch (UpdateProductAmount ex) {
                    JOptionPane.showMessageDialog(null, "We've finished updating the amount of your product.", " Success", JOptionPane.INFORMATION_MESSAGE, ctrl.cptIcon);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Sorry, we're unable to add your product.", " Error !!!", JOptionPane.ERROR_MESSAGE, ctrl.errIcon);
                    System.err.println("Oops!, There's an internal error.");
                    ex.printStackTrace();
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_submitAddProductActionPerformed

    private void subProductByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subProductByIdActionPerformed
        ctrl.clickSelect(subProductById, prodIdSub, prodNameSub, "Enter a product name.");
        // TODO add your handling code here:
    }//GEN-LAST:event_subProductByIdActionPerformed

    private void subProductByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subProductByNameActionPerformed
        ctrl.clickSelect(subProductByName, prodNameSub, prodIdSub, "Type only number!");
        // TODO add your handling code here:
    }//GEN-LAST:event_subProductByNameActionPerformed

    private void prodIdSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodIdSubActionPerformed
        ctrl.checkActionPerformed(prodIdSub, "Type only number!", 2, prodAmountSub);
        ctrl.checkLong(prodIdSub, prodAmountSub);
        // TODO add your handling code here:
    }//GEN-LAST:event_prodIdSubActionPerformed

    private void prodNameSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodNameSubActionPerformed
        ctrl.checkActionPerformed(prodNameSub, "Enter a product name.", 0, prodAmountSub);
        // TODO add your handling code here:
    }//GEN-LAST:event_prodNameSubActionPerformed

    private void prodIdSubFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodIdSubFocusGained
        ctrl.setText(prodIdSub, "Type only number!");
        // TODO add your handling code here:
    }//GEN-LAST:event_prodIdSubFocusGained

    private void prodNameSubFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodNameSubFocusGained
        ctrl.setText(prodNameSub, "Enter a product name.");
        // TODO add your handling code here:
    }//GEN-LAST:event_prodNameSubFocusGained

    private void prodAmountSubFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodAmountSubFocusGained
        ctrl.setText(prodAmountSub, "Number only!");
        // TODO add your handling code here:
    }//GEN-LAST:event_prodAmountSubFocusGained

    private void prodIdSubFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodIdSubFocusLost
        if (prodIdSub.getText().isEmpty() || !subProductById.isSelected()) {
            ctrl.defaultText(prodIdSub, "Type only number!");
        } else {
            ctrl.checkLong(prodIdSub);
            ctrl.checkFocusLost(prodIdSub, "Type only number!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_prodIdSubFocusLost

    private void prodNameSubFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodNameSubFocusLost
        if (prodNameSub.getText().isEmpty() || !subProductByName.isSelected()) {
            ctrl.defaultText(prodNameSub, "Enter a product name.");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_prodNameSubFocusLost

    private void prodAmountSubFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_prodAmountSubFocusLost
        if (prodAmountSub.getText().isEmpty()) {
            ctrl.defaultText(prodAmountSub, "Number only!");
        } else {
            ctrl.checkInt(prodAmountSub);
            ctrl.checkFocusLost(prodAmountSub, "Number only!");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_prodAmountSubFocusLost

    /**
     * ตั้งค่าข้อความของ prodIdSub, prodNameSub และ prodAmountSub [JTextField] ให้เป็นแบบ default
     * โดยใช้ defaultText(JTextField field, String message)
     * ใน project.warehouse.driver.UIMethods
     */
    private void clearSubProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSubProductActionPerformed
        ctrl.defaultText(prodIdSub, "Type only number!");
        ctrl.defaultText(prodNameSub, "Enter a product name.");
        ctrl.defaultText(prodAmountSub, "Number only!");
        // TODO add your handling code here:
    }//GEN-LAST:event_clearSubProductActionPerformed

    //  ใช้ร่วมกันกับทั้ง prodAmountSub [JTextField] (ทำให้สามารถกด Enter เพื่อป้อนรายการเข้าสู่ระบบได้) และ submitSubProduct [JButton]
    private void submitSubProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitSubProductActionPerformed
        if (!ctrl.checkCorrect(prodIdSub, "Type only number!", 2)) {
            if (ctrl.checkCorrect(prodAmountSub, "Number only!", 2)) {
                ctrl.reenterText(prodAmountSub, "Oops! Incorrect data.");
            } else if (ctrl.checkSubmit(prodIdSub, prodNameSub, prodAmountSub, "Type only number!", "Enter a product name.", "Number only!", 5)) {
                if (ctrl.checkSubmit(prodIdSub, prodNameSub, prodAmountSub, "Type only number!", "Enter a product name.", "Number only!", 8)) {
                    ctrl.reenterText(prodAmountSub, "Oops! Blank data.");
                } else {
                    if (ctrl.checkSubmit(prodIdSub, null, prodAmountSub, "Type only number!", null, "Number only!", 6)) {
                        prodIdSub.requestFocus();
                    } else if (ctrl.checkSubmit(null, prodNameSub, prodAmountSub, null, "Enter a product name.", "Number only!", 7)) {
                        prodNameSub.requestFocus();     //  (bug ทำงานไม่ได้ ต้องกดด้วยมืออย่างเดียว)
                    }
                    JOptionPane.showMessageDialog(null, "Oops! Any blank data fields are not allowed.", " Warning !", JOptionPane.WARNING_MESSAGE, ctrl.warnIcon);
                }
            } else if (ctrl.checkInt(prodAmountSub)) {
                try {
                    String id, msg, name, count = prodAmountSub.getText();
                    String msg0 = "Please check the correction of these informations before we proceed.\n\n" +
                                  "<html><b>Product ID</b><html> :" + "\n      " + "[id]\n" +
                                  "<html><b>Product name</b><html> :" + "\n      " + "[name]\n" +
                                  "<html><b>Product amount</b><html> :" + "\n      " + count + "\n\n" +
                                  "Do you want to continue?\n";
            
                    //  เช็คว่า field ไหนที่ทำงานได้ (กดป้อนข้อความได้)
                    if (prodIdSub.isEnabled()) {
                        if (ctrl.checkExist(prodIdSub, null, prodAmountSub)) {
                            if (ctrl.checkSubmit(prodIdSub, null, prodAmountSub, "Type only number!", null, "Number only!", 9)) {
                                id = prodIdSub.getText();
                                name = Product.subProductName(id);  //  ดึงชื่อมาจากฐานข้อมูลโดยใช้ Product.subProductName(String id)
                                msg = msg0.replace("[id]", id).replace("[name]", name);
                                int response = JOptionPane.showConfirmDialog(null, msg, " Confirm ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, ctrl.markIcon);
                                if (response == JOptionPane.YES_OPTION) {
                                    Product.subProduct(id, name, Integer.parseInt(count));
                                    JOptionPane.showMessageDialog(null, "Your product has been successfully deleted from the database.", " Success", JOptionPane.INFORMATION_MESSAGE, ctrl.delIcon);
                                    prodIdSub.requestFocus();
                                }
                            }
                        }
                    } else {
                        if (ctrl.checkExist(null, prodNameSub, prodAmountSub)) {
                            if (ctrl.checkSubmit(null, prodNameSub, prodAmountSub, null, "Enter a product name.", "Number only!", 10)) {
                                name = prodNameSub.getText();
                                id = Product.subProductId(name);    //  ดึงตัวเลขมาจากฐานข้อมูลโดยใช้ Product.subProductId(String name)
                                msg = msg0.replace("[id]", id).replace("[name]", name);
                                int response = JOptionPane.showConfirmDialog(null, msg, " Confirm ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, ctrl.markIcon);
                                if (response == JOptionPane.YES_OPTION) {
                                    Product.subProduct(id, name, Integer.parseInt(count));
                                    JOptionPane.showMessageDialog(null, "Your product has been successfully removed from the database.", " Success", JOptionPane.INFORMATION_MESSAGE, ctrl.delIcon);
                                    prodNameSub.requestFocus();
                                }
                            }
                        }
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Sorry, we're unable to add your product.", " Error !!!", JOptionPane.ERROR_MESSAGE, ctrl.errIcon);
                    System.err.println("Oops!, There's an internal error.");
                    ex.printStackTrace();
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_submitSubProductActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        if (ctrl.checkCorrect(search, "Search...", 0)) {
            if (SearchProduct.searchProduct(search, searchTable)) {
                searchProductResultScrollPane.setVisible(true);
                searchProductResultScrollPane.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Sorry, we've not found any matched results.", " Error !!!", JOptionPane.ERROR_MESSAGE, ctrl.srchIcon);
            }
        } else {
            ctrl.reenterText(search, "Oops! Blank data.");
        }
        searchList.repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchCaretUpdate
        if (searchList.isSelectionEmpty()) {
            if (ctrl.checkCorrect(search, "Search...", 0) && !search.getText().equals("Search...")) {
                temp1 = search.getText();
                strings = SearchProduct.searchListInsert(temp1);
                if (strings.length != 0) {
                    searchProductScrollPane.setVisible(true);
                } else {
                    searchProductScrollPane.setVisible(false);
                }
            }
        }
        searchList.repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchCaretUpdate

    private void searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusGained
        if (!ctrl.checkCorrect(search, "Search...", 0)) {
            search.setCaretPosition(0);
        } else {
            search.setCaretPosition(search.getText().length());
        }
        searchList.repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFocusGained

    private void searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusLost
        if (search.getText().isEmpty()) {
            ctrl.defaultText(search, "Search...");
            searchProductScrollPane.setVisible(false);
            searchProductResultScrollPane.setVisible(false);
            SearchProduct.searchTableRowClear(searchTable);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFocusLost

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        int[] keyList = {9, 10,     //  KeyEvent.VK_TAB, KeyEvent.VK_ENTER
            16, 17, 18,     //  KeyEvent.VK_SHIFT, KeyEvent.VK_CONTROL, KeyEvent.VK_ALT
            19, 20,     //  KeyEvent.VK_PAUSE, KeyEvent.VK_CAPS_LOCK
            27,     //  KeyEvent.VK_ESCAPE
            33, 34,     //  KeyEvent.VK_PAGE_UP, KeyEvent.VK_PAGE_DOWN
            35, 36,     //  KeyEvent.VK_END, KeyEvent.VK_HOME
            37, 38, 39, 40,     //  KeyEvent.VK_LEFT, KeyEvent.VK_UP, KeyEvent.VK_RIGHT, KeyEvent.VK_DOWN
            144, 145,   //  KeyEvent.VK_NUM_LOCK, KeyEvent.VK_SCROLL_LOCK
            154, 155,   //  KeyEvent.VK_PRINTSCREEN, KeyEvent.VK_INSERT
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,    //  KeyEvent.VK_F1 - KeyEvent.VK_F12
            224, 225, 226, 227,    //  KeyEvent.VK_KP_UP, KeyEvent.VK_KP_DOWN, KeyEvent.VK_KP_LEFT, KeyEvent.VK_KP_RIGHT
            524, 525,   //  KeyEvent.VK_WINDOWS, KeyEvent.VK_CONTEXT_MENU
            61440, 61441, 61442, 61443, 61444, 61445, 61446, 61447, 61448, 61449, 61450, 61451};    //  KeyEvent.VK_F13 - KeyEvent.VK_F24
        int keyPressed = evt.getKeyCode();
        boolean check = false;
        for (int keyNum : keyList) {
            if (keyPressed == keyNum) {
                check = true;
                break;
            }
        }
        
        if (!check) {
            searchProductResultScrollPane.setVisible(false);
            SearchProduct.searchTableRowClear(searchTable);
        }
        
        if (!check && (search.getText().length() > 0) && (search.getText().length() < 18) && (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)) {
            searchProductScrollPane.setVisible(true);
        }
                
        if (ctrl.checkCorrect(search, "Search...", 0) && ((evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_KP_UP))) {
            evt.consume();
            temp = search.getText();
            searchList.setSelectedIndex(searchList.getLastVisibleIndex());
            search.setText(searchList.getSelectedValue());
            searchList.requestFocus();
        } else if (ctrl.checkCorrect(search, "Search...", 0) && ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_KP_DOWN))) {
            evt.consume();
            temp = search.getText();
            searchList.setSelectedIndex(searchList.getFirstVisibleIndex());
            search.setText(searchList.getSelectedValue());
            searchList.requestFocus();
        }
        
        if (search.getText().isEmpty() ||
           ((search.getText().length() == 1) && (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)) ||
           (ctrl.checkCorrect(search, "Search...", 0) && (evt.getKeyCode() == KeyEvent.VK_ENTER))) {
                searchProductScrollPane.setVisible(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchKeyPressed

    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        ctrl.setText(search, "Search...");
        // TODO add your handling code here:
    }//GEN-LAST:event_searchKeyTyped

    private void searchListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchListKeyPressed
        String[] str = new String[searchList.getModel().getSize()];
        for(int i = 0; i < searchList.getModel().getSize(); i++) {
            str[i] = searchList.getModel().getElementAt(i);
        }
        
        if ((evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_KP_UP)) {
            int i = searchList.getSelectedIndex() - 1;
            if (i >= 0) {
                search.setText(str[i]);
            } else {
                search.setText(temp);
                search.requestFocus();
                searchList.clearSelection();
            }
        } else if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_KP_DOWN)) {
            int i = searchList.getSelectedIndex() + 1;
            if (i <= searchList.getLastVisibleIndex()) {
                search.setText(str[i]);
            } else {
                search.setText(temp);
                search.requestFocus();
                searchList.clearSelection();
            }
        }
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            search.setText(searchList.getSelectedValue());
            search.requestFocus();
            searchProductScrollPane.setVisible(false);
            searchList.clearSelection();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_searchListKeyPressed

    //  @param args the command line arguments
    public static void main(String args[]) {
        // Set the look and feel
        //<editor-fold defaultstate="collapsed" desc="Look and feel setting code (optional)">
        /** 
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());    //  ใช้ UI ตามแบบ default ของระบบ OS ใดๆและเลิกใช้ UI แบบ Nimbus
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }
        //</editor-fold>

        // Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                final UI app = new UI();
                
                //  เอา subProductById และ subProductByName [JRadioButton] มาจับกลุ่มกัน ทำให้กดได้แค่เฉพาะอย่างใดอย่างหนึ่งเท่านั้น
                ButtonGroup group = new ButtonGroup();
                group.add(app.subProductById);
                group.add(app.subProductByName);
                
                //  ตั้งให้เมื่อกด Close บน Title bar (รูปกากบาท, X) จะเรียกใช้งาน close(boolean bl) ใน project.warehouse.driver.UIMethods
                app.addWindowListener(new WindowAdapter() {
                    @Override
                    public void windowClosing(WindowEvent e) {
                        app.ctrl.close(state);
                    }
                });
                app.setIconImage(new ImageIcon(".\\img\\ic_assignment_white_24dp.png").getImage());     //  ตั้งไอคอนของโปรแกรม
                app.setLocationRelativeTo(null);    //  ตั้งตำแหน่งหน้าต่างให้อยู่ตรงกลาง
                app.setVisible(true);               //  ตั้งให้มองเห็นโปรแกรม
            }
        });
    }

    // <editor-fold defaultstate="collapsed" desc="Variables declaration">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addProduct;
    private javax.swing.JLabel addProduct_text;
    private javax.swing.JButton backAddProduct;
    private javax.swing.JButton backCheckStock;
    private javax.swing.JButton backSearchProduct;
    private javax.swing.JButton backSubProduct;
    private javax.swing.JLabel checkStock;
    private javax.swing.JScrollPane checkStockScrollPane;
    private javax.swing.JLabel checkStock_text;
    private javax.swing.JButton clearAddProduct;
    private javax.swing.JButton clearSubProduct;
    private javax.swing.JLabel clock;
    private javax.swing.JLabel close;
    private javax.swing.JPanel functionAddProduct;
    private javax.swing.JPanel functionCheckStock;
    private javax.swing.JPanel functionSearchProduct;
    private javax.swing.JPanel functionSubProduct;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JButton login;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JButton logout;
    private javax.swing.JButton mainAddProduct;
    private javax.swing.JButton mainCheckStock;
    private javax.swing.JPanel mainMenu;
    private javax.swing.JButton mainSearchProduct;
    private javax.swing.JButton mainSubProduct;
    private javax.swing.JLabel main_text;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField prodAmount;
    private javax.swing.JTextField prodAmountSub;
    private javax.swing.JLabel prodAmountSub_text;
    private javax.swing.JLabel prodAmount_text;
    private javax.swing.JTextField prodId;
    private javax.swing.JTextField prodIdSub;
    private javax.swing.JLabel prodId_text;
    private javax.swing.JTextField prodName;
    private javax.swing.JTextField prodNameSub;
    private javax.swing.JLabel prodName_text;
    private javax.swing.JLabel profile;
    private javax.swing.JButton register;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JTextField search;
    private javax.swing.JList<String> searchList;
    private javax.swing.JLabel searchProduct;
    private javax.swing.JScrollPane searchProductResultScrollPane;
    private javax.swing.JScrollPane searchProductScrollPane;
    private javax.swing.JLabel searchProduct_text;
    private javax.swing.JTable searchTable;
    private javax.swing.JTable stockTable;
    private javax.swing.JLabel subProduct;
    private javax.swing.JRadioButton subProductById;
    private javax.swing.JRadioButton subProductByName;
    private javax.swing.JLabel subProduct_text;
    private javax.swing.JButton submitAddProduct;
    private javax.swing.JButton submitSubProduct;
    private javax.swing.JLabel time_text;
    private javax.swing.JTextField username;
    private javax.swing.JLabel welcome_text;
    // End of variables declaration//GEN-END:variables
}//</editor-fold>